% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pruneTree.R
\name{pruneTree}
\alias{pruneTree}
\title{Prune clustering tree using random forest classifiers}
\usage{
pruneTree(
  object,
  key = "CHOIR",
  alpha = NULL,
  p_adjust = NULL,
  feature_set = NULL,
  exclude_features = NULL,
  n_iterations = NULL,
  n_trees = NULL,
  use_variance = NULL,
  min_accuracy = NULL,
  min_connections = NULL,
  max_repeat_errors = NULL,
  distance_approx = NULL,
  distance_awareness = 2,
  collect_all_metrics = FALSE,
  sample_max = NULL,
  downsampling_rate = NULL,
  normalization_method = NULL,
  batch_correction_method = NULL,
  batch_labels = NULL,
  batch_LOO = NULL,
  cluster_params = NULL,
  use_assay = NULL,
  countsplit = NULL,
  countsplit_suffix = NULL,
  cluster_tree = NULL,
  input_matrix = NULL,
  nn_matrix = NULL,
  snn_matrix = NULL,
  dist_matrix = NULL,
  reduction = NULL,
  n_cores = NULL,
  random_seed = NULL,
  verbose = TRUE
)
}
\arguments{
\item{object}{An object of class 'Seurat', 'SingleCellExperiment', or
'ArchRProject'.}

\item{key}{The name under which CHOIR-related data for this run is stored in
the object. Defaults to 'CHOIR'.}

\item{alpha}{A numeric value indicating the significance level used for
permutation test comparisons of cluster prediction accuracies. Defaults to
0.05.}

\item{p_adjust}{A string indicating which multiple comparison adjustment to
use. Permitted values are 'bonferroni', 'fdr', and 'none'. Defaults to
'bonferroni'.}

\item{feature_set}{A string indicating whether to train random forest
classifiers on 'all' features or only variable ('var') features. Defaults to
'var'.}

\item{exclude_features}{A character vector indicating features that should be
excluded from input to the random forest classifier. Default = \code{NULL}
will not exclude any features.}

\item{n_iterations}{A numeric value indicating the number of iterations run
for each permutation test comparison. Defaults to 100.}

\item{n_trees}{A numeric value indicating the number of trees in each random
forest. Defaults to 50.}

\item{use_variance}{A boolean value indicating whether to use the variance of
the random forest accuracy scores as part of the permutation test threshold.
Defaults to \code{TRUE}.}

\item{min_accuracy}{A numeric value indicating the minimum accuracy required
of the random forest classifier, below which clusters will be automatically
merged. Defaults to 0.5 (chance).}

\item{min_connections}{A numeric value indicating the minimum number of
nearest neighbors between two clusters for them to be considered 'adjacent'.
Non-adjacent clusters will not be merged. Defaults to 1.}

\item{max_repeat_errors}{Used to account for situations in which random
forest classifier errors are concentrated among a few cells that are
repeatedly misassigned. A numeric value indicating the maximum number of such
'repeat errors' that will be taken into account. If set to 0, 'repeat errors'
will not be evaluated. Defaults to 20.}

\item{distance_approx}{A boolean value indicating whether or not to use
approximate distance calculations. Default = \code{TRUE} will use
centroid-based distances.}

\item{distance_awareness}{A numeric value representing the distance threshold
above which a cluster will not merge with another cluster. Specifically,
this value is multiplied by the distance between a cluster and its
closest distinguishable neighbor to set the threshold. Default = 2 sets
this threshold at a 2-fold increase in distance. Alternately, to omit all
distance calculations, set to \code{FALSE}.}

\item{collect_all_metrics}{A boolean value indicating whether to collect and
save additional metrics from the random forest classifier comparisons,
including feature importances and tree depth. Defaults to \code{FALSE}.}

\item{sample_max}{A numeric value indicating the maximum number of cells used
per cluster to train/test each random forest classifier. Default = \code{Inf}
does not cap the number of cells used.}

\item{downsampling_rate}{A numeric value indicating the proportion of cells
used per cluster to train/test each random forest classifier. Default =
"auto" sets the downsampling rate according to the dataset size, for
efficiency.}

\item{normalization_method}{A character string or vector indicating which
normalization method to use. In general, input data should be supplied to
CHOIR after normalization, except in cases when the user wishes to use
\code{Seurat::SCTransform()} normalization. Permitted values are 'none' or
'SCTransform'. Defaults to 'none'.}

\item{batch_correction_method}{A character string or vector indicating which
batch correction method to use. Permitted values are 'Harmony' and
'none'. Defaults to 'none'.}

\item{batch_labels}{If applying batch correction, a character string or
vector indicating the name of the column containing the batch labels.
Defaults to \code{NULL}.}

\item{batch_LOO}{A boolean value indicating whether to check for instances
in which a single batch obscures the distinction between two clusters. When
set to \code{TRUE}, a "leave-one-out" (LOO) approach is taken in permutation
test comparisons using 3 or more batches, and the lowest resulting p-value
is used. Defaults to \code{FALSE}.}

\item{cluster_params}{A list of additional parameters to be passed to
Seurat::FindClusters() for clustering at each level of the tree. Note that if
\code{group.singletons} is set to \code{TRUE}, \code{CHOIR} relabels initial
clusters such that each singleton constitutes its own cluster.}

\item{use_assay}{For Seurat or SingleCellExperiment objects, a character
string or vector indicating the assay(s) to use in the provided object.
Default = \code{NULL} will choose the current active assay for Seurat objects
and the \code{logcounts} assay for SingleCellExperiment objects.}

\item{countsplit}{A boolean value indicating whether or not to use
countsplit input data (see A. Neufeld \code{countsplit} package), such that
one matrix of counts is used for clustering tree generation, and a separate
matrix is used for all random forest classifier permutation testing. Defaults
to \code{FALSE}.}

\item{countsplit_suffix}{A character vector indicating the suffixes
that distinguish the two countsplit matrices to be used. Suffixes are
appended onto input string/vector for \code{use_slot} for Seurat objects,
\code{use_assay} for SingleCellExperiment objects, or \code{ArchR_matrix} for
ArchR objects. When countsplitting is enabled, default = \code{NULL} uses
suffixes "_1" and "_2".}

\item{cluster_tree}{An optional dataframe containing the cluster IDs of each
cell across the levels of a hierarchical clustering tree. Default = \code{NULL}
will use the hierarchical clustering tree generation by function
\code{buildTree()}.}

\item{input_matrix}{An optional matrix containing the feature x cell data on
which to train the random forest classifiers. Default = \code{NULL} will use
the feature x cell matri(ces) indicated by function \code{buildTree()}.}

\item{nn_matrix}{An optional matrix containing the nearest neighbor adjacency
of the cells. Default = \code{NULL} will look for the adjacency matri(ces)
generated by function \code{buildTree()}.}

\item{snn_matrix}{An optional matrix containing the shared nearest neighbor
adjacency of the cells. Default = \code{NULL} will look for the adjacency
matri(ces) generated by function \code{buildTree()}.}

\item{dist_matrix}{An optional distance matrix of cell to cell distances (based
on dimensionality reduction cell embeddings). Default = \code{NULL} will look
for the distance matri(ces) generated by function \code{buildTree()}.}

\item{reduction}{An optional matrix of dimensionality reduction cell
embeddings to be used for distance calculations. Defaults = \code{NULL} will
look for the dimensionality reductions generated by function \code{buildTree()}.}

\item{n_cores}{A numeric value indicating the number of cores to use for
parallelization. Default = \code{NULL} will use the number of available cores
minus 2.}

\item{random_seed}{A numeric value indicating the random seed to be used.}

\item{verbose}{A boolean value indicating whether to use verbose output
during the execution of this function. Can be set to \code{FALSE} for a
cleaner output.}
}
\value{
Returns the object with the following added data stored under the
provided key: \describe{
\item{clusters}{Final clusters and stepwise cluster results for each
progressive pruning step}
\item{parameters}{Record of parameter values used}
\item{records}{Metadata for all recorded permutation test comparisons and
feature importance scores from all comparisons}
}
}
\description{
To identify a final set of clusters, this function will move iteratively from
the bottom up to prune the provided hierarchical clustering tree using a
framework of random forest classifiers and permutation tests.
}
\details{
If \code{CHOIR::buildTree()} was run prior to this function, most parameters
will be retrieved from the object. Alternately, parameter values can be
supplied. For multi-modal data, optionally supply parameter inputs as
vectors/lists that sequentially specify the value for each modality.
}
